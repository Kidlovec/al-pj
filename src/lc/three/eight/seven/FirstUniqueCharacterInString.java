package lc.three.eight.seven;

import java.util.LinkedHashSet;
import java.util.Set;

/**
 * TODO description
 *
 * @author kidlovec
 * @date 2019-03-16
 *
 * Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.
 */
public class FirstUniqueCharacterInString {
    public static void main(String[] args) {
        String[] case1J = new String[]{
                "leetcode",
                "loveleetcode",
                "",
                "leetcodefdsafdsafdsafdsafdsafdsafdsafdsafds",
        };

        long st = System.currentTimeMillis();

        final Solution4 solution = new Solution4();
        for (int i = 0; i < 1; i++) {

            for (String data : case1J) {
                System.out.println("Output: " +solution.firstUniqChar(data));
            }
        }
        long et = System.currentTimeMillis();
        System.out.println("cost : " + (et - st) + " ms");
    }
}

class Solution1 {
    public int firstUniqChar(String s) {
        if(null == s || 0 == s.length() ) return -1;

        final char[] chars = s.toCharArray();
        for (int j = 0; j < chars.length; j++) {
            boolean isDuplicated = false;
            for (int i = 0; i < chars.length; i++) {
                if (i == j) continue;;
                if (chars[j] == chars[i]) {

                    isDuplicated = true;
                }
            }
            if (!isDuplicated) return j;
        }

        return -1;
    }
}

class Solution2 {
    public int firstUniqChar(String s){
        if(null == s || 0 == s.length() ) return -1;
        int [] countSet = new int[26];

        final char[] chars = s.toCharArray();
        for (int i = 0; i < chars.length; i++) {
            countSet[chars[i] - 97]++;
        }

        for (int i = 0; i < chars.length; i++) {
            if (countSet[chars[i] - 97] == 1) return i;

        }
        return -1;
    }
}

class Solution3 {
    public int firstUniqChar(String s){
        if(null == s || 0 == s.length() ) return -1;
        int [] countSet = new int[26];

        for (int i = 0; i < s.length(); i++) {
            countSet[s.charAt(i) - 97]++;
        }

        for (int i = 0; i < s.length(); i++) {
            if (countSet[s.charAt(i) - 97] == 1) return i;
        }
        return -1;
    }
}

class Solution4 {
    public int firstUniqChar(String s) {
        if(null == s || 0 == s.length() ) return -1;
        int [] countSet = new int[26];

        for (int i = 0; i < s.length(); i++) {
            countSet[s.charAt(i) - 97]++;
        }

        int minIndex = s.length();
        for(int i = 0;i < countSet.length;i++) {
            if(countSet[i] == 1 && minIndex > s.indexOf(i + 97)) {
                minIndex = s.indexOf(i + 97);
            }
        }

        if (minIndex == s.length())
            return -1;
        return minIndex;
    }
}